name: slopify

services:
  account:
    container_name: account-service
    build:
      context: .
      dockerfile: account/Dockerfile
    expose:
      - "8080"
    # labels: { logging: "promtail" }
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.account.rule=Host(`slopify.local`) && PathPrefix(`/api/account`)"

  product:
    container_name: product-service
    build:
      context: .
      dockerfile: product/Dockerfile
    expose:
      - "8080"
    # labels: { logging: "promtail" }
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.product.rule=Host(`slopify.local`) && PathPrefix(`/api/product`)"

  reverse-proxy:
    container_name: traefik-reverse-proxy
    image: traefik:latest
    command:
      - "--api.insecure=true"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
    ports:
      - "80:80"
      - "8080:8080"
    labels:
      - dev.orbstack.domains=slopify.local
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  # loki:
  #   image: grafana/loki:3.3.2
  #   command: -config.file=/etc/loki/local-config.yaml
  #   volumes: [./data/loki:/loki]
  #
  # promtail:
  #   image: grafana/promtail:3.3.2
  #   command: -config.file=/etc/promtail/docker-config.yaml
  #   volumes:
  #     - ./configs/promtail.yaml:/etc/promtail/docker-config.yaml
  #     - /var/lib/docker/containers:/var/lib/docker/containers:ro
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on: [loki]
  #
  # grafana:
  #   image: grafana/grafana:11.4.0
  #   ports: [3000:3000]
  #   volumes:
  #     - ./configs/grafana.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
